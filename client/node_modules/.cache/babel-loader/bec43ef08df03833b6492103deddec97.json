{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikulin\\\\Downloads\\\\trps coursework\\\\client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/auth';\nimport { useForm } from '../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const context = useContext(AuthContext);\n  const navigate = useNavigate();\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(registerUser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(_, _ref) {\n      let {\n        data: {\n          register: userData\n        }\n      } = _ref;\n      context.login(userData);\n      navigate('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.errors);\n    },\n\n    variables: values\n  });\n\n  function registerUser() {\n    addUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      className: loading ? \"loading\" : '',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Username\",\n        placeholder: \"Username..\",\n        name: \"username\",\n        type: \"text\",\n        error: errors.username ? true : false,\n        value: values.username,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Email\",\n        placeholder: \"Email..\",\n        name: \"email\",\n        type: \"text\",\n        error: errors.email ? true : false,\n        value: values.email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Password\",\n        placeholder: \"Password..\",\n        name: \"password\",\n        type: \"password\",\n        error: errors.password ? true : false,\n        value: values.password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Confirm Password\",\n        placeholder: \"Confirm Password..\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        error: errors.confirmPassword ? true : false,\n        value: values.confirmPassword,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui error message\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: Object.values(errors).map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"80t/aNVjLbJHrgpH1F+8YDrTPV0=\", false, function () {\n  return [useNavigate, useForm, useMutation];\n});\n\n_c = Register;\nconst REGISTER_USER = gql`\n    mutation register (\n        $username: String!\n        $email: String!\n        $password: String!\n        $confirmPassword: String!\n    )\n    {\n        register (\n            registerInput: {\n                username: $username\n                email: $email\n                password: $password\n                confirmPassword: $confirmPassword\n            }\n        ){\n            id email username createdAt token\n        }\n    }\n`;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/nikulin/Downloads/trps coursework/client/src/pages/Register.js"],"names":["React","useContext","useState","useMutation","gql","Button","Form","useNavigate","AuthContext","useForm","Register","errors","setErrors","context","navigate","onChange","onSubmit","values","registerUser","username","email","password","confirmPassword","addUser","loading","REGISTER_USER","update","_","data","register","userData","login","onError","err","graphQLErrors","extensions","variables","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\r\nimport{useMutation} from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport {Button,Form} from \"semantic-ui-react\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport {AuthContext} from '../context/auth'\r\nimport {useForm} from '../utils/hooks';\r\n\r\nfunction Register() {\r\n    const [errors, setErrors] = useState({});\r\n    const context = useContext(AuthContext)\r\n    const navigate = useNavigate();\r\n\r\n    const {onChange, onSubmit, values } =useForm(registerUser, {\r\n        username:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword: '',\r\n    })\r\n\r\n    const [addUser, {loading}] =useMutation(REGISTER_USER, {\r\n        update(_, {data:{register:userData}}){\r\n            context.login(userData);\r\n            navigate('/');\r\n        },\r\n        onError(err){\r\n            setErrors(err.graphQLErrors[0].extensions.errors);\r\n        },\r\n        variables: values\r\n    })\r\n  \r\n    function registerUser() {\r\n        addUser();\r\n    }\r\n   \r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\": ''}>\r\n                <h1>Register</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username..\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    error={errors.username ? true : false}\r\n                    value={values.username}\r\n                    onChange={onChange} />\r\n                <Form.Input\r\n                    label=\"Email\"\r\n                    placeholder=\"Email..\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    error={errors.email ? true : false}\r\n                    value={values.email}\r\n                    onChange={onChange} />\r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password..\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    error={errors.password ? true : false}\r\n                    value={values.password}\r\n                    onChange={onChange} />\r\n                 <Form.Input\r\n                    label=\"Confirm Password\"\r\n                    placeholder=\"Confirm Password..\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    error={errors.confirmPassword ? true : false}\r\n                    value={values.confirmPassword}\r\n                    onChange={onChange} />\r\n                    <Button type=\"submit\" primary>Register</Button>\r\n                </Form>\r\n                {Object.keys(errors).length > 0 && (\r\n                    <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map((value)=> (\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql `\r\n    mutation register (\r\n        $username: String!\r\n        $email: String!\r\n        $password: String!\r\n        $confirmPassword: String!\r\n    )\r\n    {\r\n        register (\r\n            registerInput: {\r\n                username: $username\r\n                email: $email\r\n                password: $password\r\n                confirmPassword: $confirmPassword\r\n            }\r\n        ){\r\n            id email username createdAt token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}