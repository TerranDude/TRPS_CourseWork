{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikulin\\\\Downloads\\\\trps coursework\\\\client\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Image } from 'semantic-ui-react';\nimport { FETCH_POSTS_QUERY } from \"../utils/graphql\";\nimport PostCard from '../components/PostCard';\nimport { AuthContext } from '../context/auth';\nimport PostForm from '../components/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_POSTS_QUERY);\n\n  if (data) {\n    var {\n      getPosts: posts\n    } = data;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n      className: \"page-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [user && /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading posts..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this) : posts && posts.map(post => /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          marginBottom: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"RLKxpb667RqRAfJpHo9kNBI2l7c=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/nikulin/Downloads/trps coursework/client/src/pages/Home.js"],"names":["React","useContext","useQuery","Grid","Image","FETCH_POSTS_QUERY","PostCard","AuthContext","PostForm","Home","user","loading","data","getPosts","posts","map","post","marginBottom","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAK;AAACC,IAAAA;AAAD,MAAST,UAAU,CAACM,WAAD,CAAxB;AAGA,QAAM;AAACI,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAmBV,QAAQ,CAACG,iBAAD,CAAjC;;AACA,MAAIO,IAAJ,EAAU;AACN,QAAI;AAACC,MAAAA,QAAQ,EAAEC;AAAX,QAAoBF,IAAxB;AACH;;AACD,sBACI,QAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA,4BACJ,QAAC,IAAD,CAAM,GAAN;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI,eAIJ,QAAC,IAAD,CAAM,GAAN;AAAA,iBACKF,IAAI,iBACD,QAAC,IAAD,CAAM,MAAN;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFR,EAMKC,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,GAGJG,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACnB,QAAC,IAAD,CAAM,MAAN;AAA2B,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAC;AAAd,SAAlC;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAkBA,IAAI,CAACE,EAAvB;AAAA;AAAA;AAAA;AAAA,cADK,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAlCQT,I;UAIoBP,Q;;;KAJpBO,I;AAsCT,eAAeA,IAAf","sourcesContent":["import React,{useContext} from \"react\";\r\nimport {useQuery} from '@apollo/react-hooks';\r\nimport { Grid, Image } from 'semantic-ui-react';\r\n\r\nimport { FETCH_POSTS_QUERY } from \"../utils/graphql\";\r\nimport PostCard from '../components/PostCard';\r\nimport {AuthContext} from '../context/auth';\r\nimport PostForm from '../components/PostForm'\r\n\r\nfunction Home() {\r\n    const{user} = useContext(AuthContext);\r\n\r\n\r\n    const {loading, data } = useQuery(FETCH_POSTS_QUERY);\r\n    if (data) {\r\n        var {getPosts: posts} = data;\r\n    }\r\n    return (\r\n        <Grid columns={3} >\r\n    <Grid.Row className=\"page-title\">\r\n        <h1>Recent Posts</h1>\r\n    </Grid.Row>\r\n    <Grid.Row>\r\n        {user &&(\r\n            <Grid.Column>\r\n                <PostForm/>\r\n            </Grid.Column>\r\n        )}\r\n        {loading ? (\r\n            <h1>Loading posts..</h1>\r\n        ) : (\r\n            posts && posts.map(post => (\r\n                <Grid.Column key={post.id} style={{marginBottom:20}}>\r\n                    <PostCard post={post} />\r\n                </Grid.Column>\r\n            ))\r\n        )\r\n            \r\n        }\r\n    </Grid.Row>\r\n\r\n    </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Home;\r\n\r\n"]},"metadata":{},"sourceType":"module"}