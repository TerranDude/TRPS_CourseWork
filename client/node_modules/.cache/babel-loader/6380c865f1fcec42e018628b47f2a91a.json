{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2400G\\\\Downloads\\\\trps coursework2502\\\\trps coursework\\\\client\\\\src\\\\pages\\\\SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, CardMeta, Grid, Label, Button, Image, Icon } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom';\nimport LikeButton from '../components/LikeButton';\nimport { AuthContext } from '../context/auth';\nimport DeleteButton from '../components/DeleteButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SinglePost() {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    data: getPost = {},\n    loading\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  let postMarkup;\n\n  if (getPost) {\n    postMarkup = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this);\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likesCount,\n      commentCount\n    } = getPost;\n    postMarkup = /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 2,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\n            size: \"small\",\n            float: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            fluid: true,\n            children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: [\" \", moment(createdAt).fromNow()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n                user: user,\n                post: {\n                  id,\n                  likesCount,\n                  likes\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                as: \"div\",\n                labelPosition: \"right\",\n                onClick: () => console.log('Comment on post'),\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  basic: true,\n                  color: \"blue\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 38\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  basic: true,\n                  color: \"blue\",\n                  pointing: \"left\",\n                  children: commentCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), user && user.username === username && /*#__PURE__*/_jsxDEV(DeleteButton, {\n                postId: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  return postMarkup;\n}\n\n_s(SinglePost, \"IoDnPOZFgMPfe8ZRuIjDXESzyOo=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = SinglePost;\nconst FETCH_POST_QUERY = gql`\n    query($postId: ID!) {\n        getPost(postId: $postId){\n            id body createdAt username likeCount\n            likes {\n                username\n            }\n            commentCount\n            comments {\n                id username createdAt body\n            }\n        }\n    }\n\n`;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/2400G/Downloads/trps coursework2502/trps coursework/client/src/pages/SinglePost.js"],"names":["React","useContext","gql","useQuery","Card","CardMeta","Grid","Label","Button","Image","Icon","moment","useParams","LikeButton","AuthContext","DeleteButton","SinglePost","postId","user","data","getPost","loading","FETCH_POST_QUERY","variables","postMarkup","id","body","createdAt","username","comments","likes","likesCount","commentCount","fromNow","console","log"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport { Card, CardMeta, Grid, Label,Button,Image,Icon } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nimport LikeButton from '../components/LikeButton';\r\nimport {AuthContext} from '../context/auth'\r\nimport DeleteButton from '../components/DeleteButton';\r\n\r\n\r\nfunction SinglePost() {\r\n\r\n    \r\n    const {postId} =useParams();\r\n    const {user}= useContext(AuthContext)\r\n    const {data:getPost={},loading}= useQuery(FETCH_POST_QUERY, {\r\n        variables:{\r\n            postId\r\n        }\r\n    })\r\n    if (loading) {\r\n        return <p>Loading..</p>\r\n    }\r\n    let postMarkup;\r\n    if(getPost){\r\n        postMarkup= <p>Loading post..</p>\r\n    } else {\r\n        const {id,body,createdAt,username,comments,likes,likesCount,commentCount} =  getPost;\r\n        \r\n        postMarkup = (\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column width={2}>\r\n                    <Image\r\n                    src='https://react.semantic-ui.com/images/avatar/large/molly.png'\r\n                    size=\"small\"\r\n                    float=\"right\"\r\n                    />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={10}>\r\n                    <Card fluid>\r\n                        <Card.Content>\r\n                            <Card.Header>\r\n                                {username}\r\n                            </Card.Header>\r\n                            <Card.Meta> {moment(createdAt).fromNow()}</Card.Meta>\r\n                            <Card.Description>{body}</Card.Description>\r\n                        </Card.Content>\r\n                        <hr/>\r\n                        <Card.Content>\r\n                            <LikeButton user={user} post={{id,likesCount,likes}}/>\r\n                            <Button \r\n                             as=\"div\"\r\n                             labelPosition=\"right\"\r\n                             onClick={( )=> console.log('Comment on post')}\r\n                             >\r\n                                 <Button basic color=\"blue\">\r\n                                     <Icon name=\"comments\"/>\r\n                                 </Button>\r\n                                \r\n                                <Label basic color=\"blue\" pointing=\"left\">\r\n                                    {commentCount}\r\n                                </Label> \r\n                            </Button>\r\n                            {user && user.username ===username && (\r\n                                <DeleteButton postId={id}/>\r\n                            )}     \r\n                        </Card.Content>\r\n                    </Card>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        )\r\n    }\r\n    return postMarkup;\r\n}\r\n\r\nconst FETCH_POST_QUERY = gql`\r\n    query($postId: ID!) {\r\n        getPost(postId: $postId){\r\n            id body createdAt username likeCount\r\n            likes {\r\n                username\r\n            }\r\n            commentCount\r\n            comments {\r\n                id username createdAt body\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n\r\nexport default SinglePost"]},"metadata":{},"sourceType":"module"}