{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikulin\\\\Downloads\\\\trps coursework\\\\client\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from \"../context/auth\";\nimport { useForm } from '../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const context = useContext(AuthContext);\n  const navigate = useNavigate();\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n  const [loginUser, {\n    loading\n  }] = useMutation(LOGIN_USER, {\n    update(_, result) {\n      context.login;\n      navigate('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.errors);\n    },\n\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      className: loading ? \"loading\" : '',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Username\",\n        placeholder: \"Username..\",\n        name: \"username\",\n        type: \"text\",\n        error: errors.username ? true : false,\n        value: values.username,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Password\",\n        placeholder: \"Password..\",\n        name: \"password\",\n        type: \"password\",\n        error: errors.password ? true : false,\n        value: values.password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui error message\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: Object.values(errors).map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"3zXKlYLpMJAH7Q2CBSV+6G5LeIQ=\", false, function () {\n  return [useNavigate, useForm, useMutation];\n});\n\n_c = Login;\nconst LOGIN_USER = gql`\n    mutation login (\n        $username: String!,\n        $password: String!\n    )\n    {\n        login (\n                username: $username,\n                password: $password\n            )\n        {\n            id email username createdAt token\n        }\n    }\n`;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/nikulin/Downloads/trps coursework/client/src/pages/Login.js"],"names":["React","useContext","useState","useMutation","gql","Button","Form","useNavigate","AuthContext","useForm","Login","errors","setErrors","context","navigate","onChange","onSubmit","values","loginUserCallback","username","password","loginUser","loading","LOGIN_USER","update","_","result","login","onError","err","graphQLErrors","extensions","variables","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\r\nimport{useMutation} from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport {Button,Form} from \"semantic-ui-react\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport {useForm} from '../utils/hooks';\r\n\r\nfunction Login() {\r\n    const [errors, setErrors] =useState({});\r\n\r\n    const context = useContext(AuthContext);\r\n\r\n    const navigate = useNavigate();\r\n    const {onChange, onSubmit, values} =useForm(loginUserCallback, {\r\n        username:'',\r\n        password:''\r\n    });\r\n\r\n    const [loginUser,{loading}] =useMutation(LOGIN_USER,{\r\n        update(_,result) {\r\n            context.login\r\n            navigate('/')\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.errors);\r\n        },\r\n        variables: values\r\n    })\r\n    function loginUserCallback(){\r\n        loginUser();\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\": ''}>\r\n                <h1>Login</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username..\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    error={errors.username ? true : false}\r\n                    value={values.username}\r\n                    onChange={onChange} />\r\n               \r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password..\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    error={errors.password ? true : false}\r\n                    value={values.password}\r\n                    onChange={onChange} />\r\n                    <Button type=\"submit\" primary>Login</Button>\r\n                </Form>\r\n                {Object.keys(errors).length > 0 && (\r\n                    <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map((value)=> (\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LOGIN_USER = gql `\r\n    mutation login (\r\n        $username: String!,\r\n        $password: String!\r\n    )\r\n    {\r\n        login (\r\n                username: $username,\r\n                password: $password\r\n            )\r\n        {\r\n            id email username createdAt token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}