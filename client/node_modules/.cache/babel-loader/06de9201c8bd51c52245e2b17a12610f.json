{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikulin\\\\Downloads\\\\trps coursework\\\\client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from '../util/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(_, result) {\n      console.log(result);\n      navigate('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.errors);\n    },\n\n    variables: values\n  });\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(adduser, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      className: loading ? \"loading\" : '',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Username\",\n        placeholder: \"Username..\",\n        name: \"username\",\n        type: \"text\",\n        error: errors.username ? true : false,\n        value: values.username,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Email\",\n        placeholder: \"Email..\",\n        name: \"email\",\n        type: \"text\",\n        error: errors.email ? true : false,\n        value: values.email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Password\",\n        placeholder: \"Password..\",\n        name: \"password\",\n        type: \"password\",\n        error: errors.password ? true : false,\n        value: values.password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Confirm Password\",\n        placeholder: \"Confirm Password..\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        error: errors.confirmPassword ? true : false,\n        value: values.confirmPassword,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui error message\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: Object.values(errors).map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"oZzn3SR+MWLEogjATG8kBnAV4lo=\", false, function () {\n  return [useMutation, useForm, useNavigate];\n});\n\n_c = Register;\nconst REGISTER_USER = gql`\n    mutation register (\n        $username: String!\n        $email: String!\n        $password: String!\n        $confirmPassword: String!\n    )\n    {\n        register (\n            registerInput: {\n                username: $username\n                email: $email\n                password: $password\n                confirmPassword: $confirmPassword\n            }\n        ){\n            id email username createdAt token\n        }\n    }\n`;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/nikulin/Downloads/trps coursework/client/src/pages/Register.js"],"names":["React","useState","useMutation","gql","Button","Form","useNavigate","useForm","Register","errors","setErrors","addUser","loading","REGISTER_USER","update","_","result","console","log","navigate","onError","err","graphQLErrors","extensions","variables","values","onChange","onSubmit","adduser","username","email","password","confirmPassword","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport{useMutation} from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport {Button,Form} from \"semantic-ui-react\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nimport {useForm} from '../util/hooks'\r\n\r\nfunction Register() {\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const [addUser, {loading}] =useMutation(REGISTER_USER, {\r\n        update(_, result){\r\n            console.log(result);\r\n            navigate('/');\r\n\r\n\r\n        },\r\n        onError(err){\r\n            setErrors(err.graphQLErrors[0].extensions.errors);\r\n        },\r\n        variables: values\r\n    })\r\n    const {onChange, onSubmit, values } =useForm(adduser, {\r\n        username:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword: '',\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    \r\n\r\n   \r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\": ''}>\r\n                <h1>Register</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username..\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    error={errors.username ? true : false}\r\n                    value={values.username}\r\n                    onChange={onChange} />\r\n                <Form.Input\r\n                    label=\"Email\"\r\n                    placeholder=\"Email..\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    error={errors.email ? true : false}\r\n                    value={values.email}\r\n                    onChange={onChange} />\r\n                <Form.Input\r\n                    label=\"Password\"\r\n                    placeholder=\"Password..\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    error={errors.password ? true : false}\r\n                    value={values.password}\r\n                    onChange={onChange} />\r\n                 <Form.Input\r\n                    label=\"Confirm Password\"\r\n                    placeholder=\"Confirm Password..\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    error={errors.confirmPassword ? true : false}\r\n                    value={values.confirmPassword}\r\n                    onChange={onChange} />\r\n                    <Button type=\"submit\" primary>Register</Button>\r\n                </Form>\r\n                {Object.keys(errors).length > 0 && (\r\n                    <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map((value)=> (\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql `\r\n    mutation register (\r\n        $username: String!\r\n        $email: String!\r\n        $password: String!\r\n        $confirmPassword: String!\r\n    )\r\n    {\r\n        register (\r\n            registerInput: {\r\n                username: $username\r\n                email: $email\r\n                password: $password\r\n                confirmPassword: $confirmPassword\r\n            }\r\n        ){\r\n            id email username createdAt token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}