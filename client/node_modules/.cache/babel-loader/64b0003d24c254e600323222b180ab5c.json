{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikulin\\\\Downloads\\\\trps coursework\\\\client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Form } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const onChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(proxy, result) {\n      console.log(result);\n    },\n\n    variables: values\n  });\n\n  const onSubmit = event => {\n    event.preventDefault();\n    addUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Username\",\n        placeholder: \"Username..\",\n        name: \"username\",\n        value: values.username,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Email\",\n        placeholder: \"Email..\",\n        name: \"email\",\n        value: values.email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"password\",\n        placeholder: \"password..\",\n        name: \"password\",\n        value: values.password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Confirm Password\",\n        placeholder: \"Confirm Password..\",\n        name: \"confirmPassword\",\n        value: values.confirmPassword,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"JppxoU5OdEyweJCwlyzKHy77F8c=\", false, function () {\n  return [useMutation];\n});\n\n_c = Register;\nconst REGISTER_USER = gql`\n    mutation register (\n        $usernmame: String!\n        $email: String!\n        $password: String!\n        $confirmPassword: String!\n\n    )\n    {\n        register (\n            registerInput: {\n                username: $username\n                email: $email\n                password: $password\n                confirmPassword: $confirmPassword\n            }\n        ){\n            id email username createdAt token\n        }\n    }\n`;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/nikulin/Downloads/trps coursework/client/src/pages/Register.js"],"names":["React","useState","useMutation","gql","Button","Form","Register","values","setValues","username","password","confirmPassword","onChange","event","target","name","value","addUser","loading","REGISTER_USER","update","proxy","result","console","log","variables","onSubmit","preventDefault","email"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport{useMutation} from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport {Button,Form} from \"semantic-ui-react\";\r\nfunction Register() {\r\n    const [values, setValues] = useState({\r\n        username:'',\r\n        password:'',\r\n        confirmPassword: '',\r\n    })\r\n    const onChange = (event)=> {\r\n        setValues({...values,[event.target.name]:event.target.value})\r\n    }\r\n    const [addUser, {loading}] =useMutation(REGISTER_USER, {\r\n        update(proxy, result){\r\n            console.log(result)\r\n        },\r\n        variables: values\r\n    })\r\n    const onSubmit = (event)=> {\r\n        event.preventDefault();\r\n        addUser();\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <Form onSubmit={onSubmit} noValidate>\r\n                <h1>Register</h1>\r\n                <Form.Input\r\n                    label=\"Username\"\r\n                    placeholder=\"Username..\"\r\n                    name=\"username\"\r\n                    value={values.username}\r\n                    onChange={onChange} />\r\n                <Form.Input\r\n                    label=\"Email\"\r\n                    placeholder=\"Email..\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={onChange} />\r\n                <Form.Input\r\n                    label=\"password\"\r\n                    placeholder=\"password..\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={onChange} />\r\n                 <Form.Input\r\n                    label=\"Confirm Password\"\r\n                    placeholder=\"Confirm Password..\"\r\n                    name=\"confirmPassword\"\r\n                    value={values.confirmPassword}\r\n                    onChange={onChange} />\r\n                    <Button type=\"submit\" primary>Register</Button>\r\n                </Form>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql `\r\n    mutation register (\r\n        $usernmame: String!\r\n        $email: String!\r\n        $password: String!\r\n        $confirmPassword: String!\r\n\r\n    )\r\n    {\r\n        register (\r\n            registerInput: {\r\n                username: $username\r\n                email: $email\r\n                password: $password\r\n                confirmPassword: $confirmPassword\r\n            }\r\n        ){\r\n            id email username createdAt token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}