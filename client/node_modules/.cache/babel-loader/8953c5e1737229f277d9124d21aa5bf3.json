{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikulin\\\\Downloads\\\\trps coursework\\\\client\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Grid, Image } from 'semantic-ui-react';\nimport PostCard from '../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const {\n    loading,\n    data: {\n      getPosts: posts\n    }\n  } = useQuery(FETCH_POSTS_QUERY);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Loading posts..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this) : posts && posts.map(post => /*#__PURE__*/_jsxDEV(Grid.Column, {}, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/images/wireframe/media-paragraph.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/images/wireframe/media-paragraph.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/images/wireframe/media-paragraph.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"sEWr5EV6yto85QQxfwqYYy7n874=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nconst FETCH_POSTS_QUERY = gql`{\n    getPosts {\n        id\n        body createdAt\n        username\n        likeCount\n        likes {\n            username\n        }\n        comments {\n            id username createdAt body\n        }\n    }\n}\n`;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/nikulin/Downloads/trps coursework/client/src/pages/Home.js"],"names":["React","useQuery","gql","Grid","Image","PostCard","Home","loading","data","getPosts","posts","FETCH_POSTS_QUERY","map","post","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAI,EAAE;AAACC,MAAAA,QAAQ,EAAEC;AAAX;AAAhB,MAAsCT,QAAQ,CAACU,iBAAD,CAApD;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA,4BACJ,QAAC,IAAD,CAAM,GAAN;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI,eAIJ,QAAC,IAAD,CAAM,GAAN;AAAA,gBAEQJ,OAAO,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,GAGHG,KAAK,IAAIA,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACnB,QAAC,IAAD,CAAM,MAAN,MAAkBA,IAAI,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA,cADK;AALrB;AAAA;AAAA;AAAA;AAAA,YAJI,eAiBJ,QAAC,IAAD,CAAM,GAAN;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAlCQR,I;UACuCL,Q;;;KADvCK,I;AAoCT,MAAMK,iBAAiB,GAAGT,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,eAAeI,IAAf","sourcesContent":["import React from \"react\";\r\nimport {useQuery} from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Grid, Image } from 'semantic-ui-react';\r\nimport PostCard from '../components/PostCard';\r\n\r\nfunction Home() {\r\n    const {loading, data: {getPosts: posts} } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n    return (\r\n        <Grid columns={3} >\r\n    <Grid.Row>\r\n        <h1>Recent Posts</h1>\r\n    </Grid.Row>\r\n    <Grid.Row>\r\n        {\r\n            loading ? (\r\n                <h1> Loading posts..</h1>\r\n            ) : (\r\n                posts && posts.map(post=>(\r\n                    <Grid.Column key={post.id} >\r\n                        \r\n                    </Grid.Column>\r\n                ))\r\n            )\r\n        }\r\n    </Grid.Row>\r\n    <Grid.Row>\r\n      <Grid.Column>\r\n        <Image src='/images/wireframe/media-paragraph.png' />\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <Image src='/images/wireframe/media-paragraph.png' />\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <Image src='/images/wireframe/media-paragraph.png' />\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n    </Grid>\r\n    )\r\n}\r\n\r\nconst FETCH_POSTS_QUERY = gql`{\r\n    getPosts {\r\n        id\r\n        body createdAt\r\n        username\r\n        likeCount\r\n        likes {\r\n            username\r\n        }\r\n        comments {\r\n            id username createdAt body\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nexport default Home;\r\n\r\n"]},"metadata":{},"sourceType":"module"}